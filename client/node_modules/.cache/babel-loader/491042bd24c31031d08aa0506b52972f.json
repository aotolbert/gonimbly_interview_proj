{"ast":null,"code":"var _jsxFileName = \"/Users/aotolbert/Documents/Apps/gonimbly_interview_proj/client/src/App.js\";\n// import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport { Col, Row, Container, Jumbotron, Header } from \"./components/Grid\"; // import Image from \"./Images\";\n\nimport Weather from \"./components/Weather\";\nimport Pwnd from \"./components/Pwnd\";\nimport Calculator from \"./components/Calculator\";\nimport API from \"./utils/API.js\";\nimport ImgLinks from \"./Images/imglinks\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latitude: 0.0000,\n      longitude: 0.0000,\n      metaWeatherWOE: 0,\n      searchTerm: \"Seattl\",\n      woeid: 2487956\n    };\n\n    this.queryMetaWeatherWOEIdWithPosition = position => {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      let latVal = position.coords.latitude;\n      let longVal = position.coords.longitude;\n      this.setState({\n        latitude: latVal\n      });\n      this.setState({\n        longitude: longVal\n      });\n      console.log(this.state);\n\n      if (this.state.latitude !== 0.0000 && this.state.longitude !== 0.0000) {\n        console.log('located a lat and a long'); // let queryString = 'san%20fra';\n        // fetch(`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?query=${queryString}`)\n\n        API.getWOEIdWithLatLong(this.state.latitude, this.state.longitude).then(res => {\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n        }); // fetch(`/api/weather/location/search/latlong/?lat=${this.state.latitude}&long=${this.state.longitude}`)\n        // .then(res => {\n        //   console.log(res);\n        //   // return res.json();\n        // }).catch(err => {\n        //   console.log(err);\n        // })\n        // .then((data) => {\n        //   console.log(data);\n        //   if(data !== null) {\n        //     console.log(data[0].woeid);\n        //     this.setState({metaWeatherWOE: data[0].woeid})\n        //   }\n        //   this.setState({ contacts: data })\n        // })\n        // .catch(console.log)\n      } else {\n        console.log('Lat and Long info appear to be missing');\n        console.log(this.state);\n      }\n    };\n\n    this.handlePhoneClick = () => {\n      let phone = this.state.currentTruck.phone;\n      window.open(`tel: ${phone}`);\n    };\n\n    this.onClickSearchWeather = () => {\n      let searchTerm = this.state.searchTerm;\n      console.log('Searching for ' + searchTerm);\n      API.getWOEIdWithQueryString(searchTerm).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getWeatherDataForSelectedWOEId = () => {\n      let WOEid = this.state.woeid;\n      console.log('Searching for ' + WOEid);\n      API.getWeatherDataWithWOEId(WOEid).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.updateSearchTerm = e => {\n      console.log(e); // console.log('Searching for ' + searchTerm);\n      // API.getWOEIdWithQueryString(searchTerm)\n      // .then(res  => {\n      //   console.log(res);\n      // })\n      // .catch(err => {\n      //   console.log(err);\n      // });\n    };\n  }\n\n  componentDidMount() {\n    // this.loadImages();\n    if (\"geolocation\" in navigator) {\n      console.log(\"Available\");\n      console.log(navigator.geolocation);\n      navigator.geolocation.getCurrentPosition(this.queryMetaWeatherWOEIdWithPosition);\n    } else {\n      console.log(\"Not Available\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        current: this.state.currentScore,\n        high: this.state.highScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Adam Tolbert's GoNimbly Interview Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        width: \"100\",\n        id: \"background\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          size: \"8\",\n          children: /*#__PURE__*/_jsxDEV(Weather, {\n            id: \"weatherApp\",\n            setSearchTerm: () => this.updateSearchTerm,\n            onClickSearch: () => this.onClickSearchWeather,\n            searchForDataUsingWOE: () => this.getWeatherDataForSelectedWOEId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/aotolbert/Documents/Apps/gonimbly_interview_proj/client/src/App.js"],"names":["React","Component","Col","Row","Container","Jumbotron","Header","Weather","Pwnd","Calculator","API","ImgLinks","App","state","latitude","longitude","metaWeatherWOE","searchTerm","woeid","queryMetaWeatherWOEIdWithPosition","position","console","log","coords","latVal","longVal","setState","getWOEIdWithLatLong","then","res","catch","err","handlePhoneClick","phone","currentTruck","window","open","onClickSearchWeather","getWOEIdWithQueryString","getWeatherDataForSelectedWOEId","WOEid","getWeatherDataWithWOEId","updateSearchTerm","e","componentDidMount","navigator","geolocation","getCurrentPosition","render","currentScore","highScore"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport { Col, Row, Container, Jumbotron , Header} from \"./components/Grid\";\n// import Image from \"./Images\";\nimport Weather from \"./components/Weather\";\nimport Pwnd from \"./components/Pwnd\";\nimport Calculator from \"./components/Calculator\";\nimport API from \"./utils/API.js\";\nimport ImgLinks from \"./Images/imglinks\";\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n      latitude: 0.0000,\n      longitude: 0.0000,\n      metaWeatherWOE: 0,\n      searchTerm: \"Seattl\",\n      woeid: 2487956\n  };\n\n  \n\n\n  componentDidMount() {\n    // this.loadImages();\n    if (\"geolocation\" in navigator) {\n      console.log(\"Available\");\n\n      console.log(navigator.geolocation);\n\n      navigator.geolocation.getCurrentPosition(this.queryMetaWeatherWOEIdWithPosition);\n\n\n\n    } else {\n      console.log(\"Not Available\");\n    }\n  }\n\n  queryMetaWeatherWOEIdWithPosition = (position) => {\n    console.log(\"Latitude is :\", position.coords.latitude);\n    console.log(\"Longitude is :\", position.coords.longitude);\n    let latVal = position.coords.latitude;\n    let longVal = position.coords.longitude;\n\n    this.setState({latitude: latVal});\n    this.setState({longitude: longVal});\n    \n\n    console.log(this.state);\n\n    if(this.state.latitude !== 0.0000 && this.state.longitude !== 0.0000) {\n      console.log('located a lat and a long');\n      \n\n      // let queryString = 'san%20fra';\n      // fetch(`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?query=${queryString}`)\n      API.getWOEIdWithLatLong(this.state.latitude, this.state.longitude)\n      .then(res  => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n      // fetch(`/api/weather/location/search/latlong/?lat=${this.state.latitude}&long=${this.state.longitude}`)\n      // .then(res => {\n      //   console.log(res);\n      //   // return res.json();\n      // }).catch(err => {\n      //   console.log(err);\n      // })\n      // .then((data) => {\n      //   console.log(data);\n\n      //   if(data !== null) {\n      //     console.log(data[0].woeid);\n      //     this.setState({metaWeatherWOE: data[0].woeid})\n      //   }\n      //   this.setState({ contacts: data })\n      // })\n      // .catch(console.log)\n\n\n    } else {\n      console.log('Lat and Long info appear to be missing');\n      console.log(this.state);\n    \n    }\n  };\n\n  handlePhoneClick = () => {\n    let phone = this.state.currentTruck.phone\n    window.open(`tel: ${phone}`)\n}\n  onClickSearchWeather = () => {\n    let searchTerm = this.state.searchTerm;\n    console.log('Searching for ' + searchTerm);\n    API.getWOEIdWithQueryString(searchTerm)\n    .then(res  => {\n      console.log(res);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n\n  };\n\n  getWeatherDataForSelectedWOEId = () => {\n    let WOEid = this.state.woeid;\n    console.log('Searching for ' + WOEid);\n    API.getWeatherDataWithWOEId(WOEid)\n    .then(res  => {\n      console.log(res);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n\n  };\n  \n  \n\n  updateSearchTerm = (e) => {\n    console.log(e);\n    // console.log('Searching for ' + searchTerm);\n    // API.getWOEIdWithQueryString(searchTerm)\n    // .then(res  => {\n    //   console.log(res);\n    // })\n    // .catch(err => {\n    //   console.log(err);\n    // });\n\n  };\n\n\n  render() {\n    return ( \n\n      <Container fluid>\n        <Header \n        current={this.state.currentScore}\n        high={this.state.highScore}\n        />\n        <Jumbotron>\n          <h2>Adam Tolbert's GoNimbly Interview Project</h2>\n          {/* <h2 className=\"mx-auto\">Click on a Player to select them for your squad. But don't select the same player twice!!</h2> */}\n        </Jumbotron>\n        <Row width=\"100\" id=\"background\">\n\n          <Col size=\"8\">\n            <Weather id=\"weatherApp\" \n            setSearchTerm={() => this.updateSearchTerm}\n            onClickSearch={() => this.onClickSearchWeather}\n            searchForDataUsingWOE={() => this.getWeatherDataForSelectedWOEId}/>\n          </Col>\n\n          {/* <Col size=\"4\">\n            <Pwnd id=\"pwndApp\"/>\n          </Col>\n\n          <Col size=\"4\">\n            <Calculator id = \"calcApp\"/>\n          </Col> */}\n\n        </Row>\n\n      </Container>\n\n    );\n  }\n}\n\nexport default App;\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;"]},"metadata":{},"sourceType":"module"}